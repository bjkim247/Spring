/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.84
 * Generated at: 2023-12-20 00:13:42 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class regForm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("  <title>회원 가입 정보 입력</title>\r\n");
      out.write("  <!-- 부트스트랩 CSS -->\r\n");
      out.write("  <link href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("  <link href=\"css/style.css\" type=\"text/css\" rel=\"stylesheet\" />\r\n");
      out.write("</head>\r\n");
      out.write("<body class=\"text-primary\">\r\n");
      out.write("  <div class=\"container mt-5\">\r\n");
      out.write("    <form method=\"post\" action=\"member.mdo?cmd=regProc\" name=\"regForm\">\r\n");
      out.write("      <div class=\"card\">\r\n");
      out.write("        <div class=\"card-header text-center\">\r\n");
      out.write("          <h4>회원 가입 정보 입력</h4>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"card-body\">\r\n");
      out.write("          <div class=\"form-group row\">\r\n");
      out.write("            <label class=\"col-sm-2 col-form-label text-right\">아이디 :</label>\r\n");
      out.write("            <div class=\"col-sm-10\">\r\n");
      out.write("              <div class=\"input-group\">\r\n");
      out.write("                <input type=\"text\" class=\"form-control\" name=\"id\" placeholder=\"아이디를 입력하세요\" />\r\n");
      out.write("                <div class=\"input-group-append\">\r\n");
      out.write("                  <button class=\"btn btn-outline-secondary\" type=\"button\" onclick=\"idCheck(this.form.id.value)\">중복확인</button>\r\n");
      out.write("                </div>\r\n");
      out.write("              </div>\r\n");
      out.write("            </div>\r\n");
      out.write("          </div>\r\n");
      out.write("          <div class=\"form-group row\">\r\n");
      out.write("            <label class=\"col-sm-2 col-form-label text-right\">패스워드 :</label>\r\n");
      out.write("            <div class=\"col-sm-10\">\r\n");
      out.write("              <input type=\"password\" class=\"form-control\" name=\"pass\" />\r\n");
      out.write("            </div>\r\n");
      out.write("          </div>\r\n");
      out.write("          <!-- 다른 폼 요소들도 유사한 방식으로 변경 가능 -->\r\n");
      out.write("          	<form method=\"post\" action=\"member.mdo?cmd=regProc\" name=\"regForm\">\r\n");
      out.write("		<table border=\"1\">\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td colspan=\"2\" align=\"center\">회원 가입 정보 입력</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td align=\"right\">아이디 :</td>\r\n");
      out.write("				<td><input type=\"text\" name=\"id\" size=\"20\" />&nbsp; <input\r\n");
      out.write("					type=\"button\" value=\"중복확인\" onClick=\"idCheck(this.form.id.value)\" /></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td align=\"right\">패스워드 :</td>\r\n");
      out.write("				<td><input type=\"password\" name=\"pass\" /></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td align=\"right\">패스워드 확인 :</td>\r\n");
      out.write("				<td><input type=\"password\" name=\"repass\" /></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td align=\"right\">이름 :</td>\r\n");
      out.write("				<td><input type=\"text\" name=\"name\" /></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td align=\"right\">전화번호 :</td>\r\n");
      out.write("				<td><select name=\"phone1\">\r\n");
      out.write("						<option value=\"02\">02</option>\r\n");
      out.write("						<option value=\"011\">011</option>\r\n");
      out.write("				</select>&nbsp;-&nbsp; <input type=\"text\" name=\"phone2\" size=\"5\" />\r\n");
      out.write("					&nbsp;-&nbsp; <input type=\"text\" name=\"phone3\" size=\"5\" /></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td align=\"right\">이메일 :</td>\r\n");
      out.write("				<td><input type=\"text\" name=\"email\" /></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td align=\"right\">우편번호 :</td>\r\n");
      out.write("				<td><input type=\"text\" name=\"zipcode\" size=\"20\" />&nbsp; <input\r\n");
      out.write("					type=\"button\" value=\"찾기\" onClick=\"zipCheck()\" /></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td align=\"right\">주소1 :</td>\r\n");
      out.write("				<td><input type=\"text\" name=\"address1\" size=\"50\" /></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td align=\"right\">주소2 :</td>\r\n");
      out.write("				<td><input type=\"text\" name=\"address2\" size=\"30\" /></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td colspan=\"2\" align=\"center\">\r\n");
      out.write("				<input type=\"button\"\r\n");
      out.write("					value=\"회원가입\" onClick=\"inputCheck()\" />&nbsp;&nbsp;\r\n");
      out.write("					<input type=\"submit\"\r\n");
      out.write("					value=\"submit\" onClick=\"inputCheck()\" />&nbsp;&nbsp;\r\n");
      out.write("					 <input\r\n");
      out.write("					type=\"reset\" value=\"다시입력\" /></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("		</table>\r\n");
      out.write("	</form>\r\n");
      out.write("          <div class=\"form-group row\">\r\n");
      out.write("            <div class=\"col-sm-12 text-center\">\r\n");
      out.write("              <button type=\"button\" class=\"btn btn-primary\" onclick=\"inputCheck()\">회원가입</button>\r\n");
      out.write("              <button type=\"submit\" class=\"btn btn-primary\" onclick=\"inputCheck()\">제출</button>\r\n");
      out.write("              <button type=\"reset\" class=\"btn btn-primary\">다시입력</button>\r\n");
      out.write("            </div>\r\n");
      out.write("          </div>\r\n");
      out.write("        </div>\r\n");
      out.write("      </div>\r\n");
      out.write("    </form>\r\n");
      out.write("  </div>\r\n");
      out.write("\r\n");
      out.write("  <!-- 부트스트랩 JS 및 jQuery -->\r\n");
      out.write("  <script src=\"https://code.jquery.com/jquery-3.5.1.slim.min.js\"></script>\r\n");
      out.write("  <script src=\"https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js\"></script>\r\n");
      out.write("  <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("  <script type=\"text/javascript\" src=\"script.js\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
